============================= test session starts ==============================
platform darwin -- Python 3.11.3, pytest-7.2.2, pluggy-1.0.0
rootdir: /Users/timurahtyamov/Documents/Project/Scriptsv0.7
collected 1 item

test_NSO.py 
üÖæÔ∏è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:  2.37 —Å (–Ω–æ—Ä–º–∞ - –º–µ–Ω–µ–µ 2 —Å)
‚úÖ –í—ã–±–æ—Ä –õ–ü–£:  2.54 —Å
 ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞:  4.9 —Å
‚úÖ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–∫–Ω–∞ - –î–Ω–µ–≤–Ω–∏–∫ –≤—Ä–∞—á–∞:  8.13 —Å–µ–∫
‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —É—Å–ª—É–≥—É
‚úÖ –£—Å–ª—É–≥–∞ –æ–∫–∞–∑–∞–Ω–∞
‚úÖ –£—Å–ª—É–≥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
‚úÖ –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞
 ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–î–Ω–µ–≤–Ω–∏–∫ –≤—Ä–∞—á–∞", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞:  63.8 —Å
‚úÖ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:  9.95 —Å
‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç –∑–∞–ø–∏—Å–∞–Ω –∫ –≤—Ä–∞—á—É
‚úÖ –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞
 ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞:  38.24 —Å
‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é
‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
‚úÖ –ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞
‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞ –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é —É–¥–∞–ª–µ–Ω–∞
 ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞:  32.01 —Å
‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ–∑–¥–∞–Ω
F

=================================== FAILURES ===================================
____________________________ Test_NSO.test_NSO_full ____________________________

self = <test_NSO.Test_NSO object at 0x1026d8450>
browser_NSO = <selenium.webdriver.chrome.webdriver.WebDriver (session="22cb0135db52b118f635423b7507720f")>

    def test_NSO_full(self, browser_NSO):
        start = time.time()  # –Ω–∞—á–∞–ª–æ –æ—Ç—Å—á–µ—Ç–∞
        start_page = login(browser_NSO)  # —Ç–µ—Å—Ç –º–æ–¥—É–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        start_page.auth()
        start_doctors_diary = time.time()
        doctors_diary_test = doctors_diary(browser_NSO) # —Ç–µ—Å—Ç –º–æ–¥—É–ª—è "–î–Ω–µ–≤–Ω–∏–∫ –≤—Ä–∞—á–∞"
        doctors_diary_test.diary()
        doctors_diary_test.diary_provide_service()
        doctors_diary_test.diary_delite()
        end_doctors_diary = time.time()
        full_doctors_diary = end_doctors_diary - start_doctors_diary
        print(' ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–î–Ω–µ–≤–Ω–∏–∫ –≤—Ä–∞—á–∞", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞: ', round(full_doctors_diary, 2), '—Å')  # –≤—ã–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        start_patient_schedule = time.time()
        patient_schedule_test = schedule(browser_NSO) # —Ç–µ—Å—Ç –º–æ–¥—É–ª—è "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
        patient_schedule_test.patient_schedule()
        patient_schedule_test.patient_schedule_delete()
        end_patient_schedule = time.time()
        full_patient_schedule = end_patient_schedule - start_patient_schedule
        print(' ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞: ', round(full_patient_schedule, 2), '—Å')  # –≤—ã–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        start_patient_hospitalization = time.time()
        patient_hospitalization_test = hospitalization(browser_NSO) # —Ç–µ—Å—Ç –º–æ–¥—É–ª—è "–ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏"
        patient_hospitalization_test.register_patient()
        patient_hospitalization_test.patient_hospitalization()
        patient_hospitalization_test.patient_cancel_hospitalization()
        patient_hospitalization_test.patient_delete_hospitalization()
        end_patient_hospitalization = time.time()
        full_patient_hospitalization = end_patient_hospitalization - start_patient_hospitalization
        print(' ‚ñ∂Ô∏è –ú–æ–¥—É–ª—å - "–ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è", –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞: ', round(full_patient_hospitalization, 2), '—Å')  # –≤—ã–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        start_search_patient = time.time()
        search_patient_test = search_patient(browser_NSO) # —Ç–µ—Å—Ç –º–æ–¥—É–ª—è "–ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"
        search_patient_test.create_patient()
>       search_patient_test.delete_patient()

test_NSO.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
NSO/page_object/search_patient_page.py:146: in delete_patient
    self.find_element(search_patient_locators.LOCATOR_CREATE_DATA).click() # —Ñ–∏–ª—å—Ç—Ä –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–¥. –∫–∞—Ä—Ç—ã
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click
    self._execute(Command.CLICK_ELEMENT)
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute
    return self._parent.execute(command, params)
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x102000c90>
response = {'status': 400, 'value': '{"value":{"error":"element not interactable","message":"element not interactable\\n  (Sessio...ff818665259 _pthread_start + 125\\n21  libsystem_pthread.dylib             0x00007ff818660c7b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """Checks that a JSON response from the WebDriver does not have an
        error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get("status", None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get("value", None)
            if value_json and isinstance(value_json, str):
                import json
    
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value["value"]
                    status = value.get("error", None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get("message")
                    else:
                        message = value.get("message", None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif (
            status in ErrorCode.INVALID_SELECTOR
            or status in ErrorCode.INVALID_XPATH_SELECTOR
            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER
        ):
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response["value"]
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and "message" in value:
            message = value["message"]
    
        screen = None  # type: ignore[assignment]
        if "screen" in value:
            screen = value["screen"]
    
        stacktrace = None
        st_value = value.get("stackTrace") or value.get("stacktrace")
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split("\n")
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get("methodName", "<anonymous>")
                        if "className" in frame:
                            meth = f"{frame['className']}.{meth}"
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if "data" in value:
                alert_text = value["data"].get("text")
            elif "alert" in value:
                alert_text = value["alert"].get("text")
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable
E         (Session info: chrome=113.0.5672.92)
E       Stacktrace:
E       0   chromedriver                        0x0000000103438598 chromedriver + 4973976
E       1   chromedriver                        0x000000010342f913 chromedriver + 4938003
E       2   chromedriver                        0x0000000102fecb50 chromedriver + 469840
E       3   chromedriver                        0x0000000103031ea6 chromedriver + 753318
E       4   chromedriver                        0x0000000103024671 chromedriver + 697969
E       5   chromedriver                        0x00000001030549c2 chromedriver + 895426
E       6   chromedriver                        0x0000000103023e51 chromedriver + 695889
E       7   chromedriver                        0x0000000103054b7e chromedriver + 895870
E       8   chromedriver                        0x000000010306f856 chromedriver + 1005654
E       9   chromedriver                        0x0000000103054793 chromedriver + 894867
E       10  chromedriver                        0x000000010302221f chromedriver + 688671
E       11  chromedriver                        0x000000010302356e chromedriver + 693614
E       12  chromedriver                        0x00000001033f2bb7 chromedriver + 4688823
E       13  chromedriver                        0x00000001033f7a51 chromedriver + 4708945
E       14  chromedriver                        0x00000001033fe40f chromedriver + 4736015
E       15  chromedriver                        0x00000001033f891a chromedriver + 4712730
E       16  chromedriver                        0x00000001033cb87c chromedriver + 4528252
E       17  chromedriver                        0x0000000103417f28 chromedriver + 4841256
E       18  chromedriver                        0x00000001034180a7 chromedriver + 4841639
E       19  chromedriver                        0x000000010342928f chromedriver + 4911759
E       20  libsystem_pthread.dylib             0x00007ff818665259 _pthread_start + 125
E       21  libsystem_pthread.dylib             0x00007ff818660c7b thread_start + 15

/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException
=========================== short test summary info ============================
FAILED test_NSO.py::Test_NSO::test_NSO_full - selenium.common.exceptions.Elem...
======================== 1 failed in 196.64s (0:03:16) =========================
